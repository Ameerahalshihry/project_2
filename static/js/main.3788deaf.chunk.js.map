{"version":3,"sources":["img14.png","Search.js","ListBooks.js","Img.js","BookDetails.js","ISBNs.js","BookCard.js","Row.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","react_default","a","createElement","onSubmit","this","props","searchBook","style","display","className","type","placeholder","onChange","handleSearch","Component","ListBooks","require","state","searchInput","searchedBook","e","preventDefault","_this","setState","target","value","fetch","concat","then","response","json","data","console","log","_this2","bookSearching","map","book","index","Search_Search","Img","handleDetails","handleDetailsClick","onClick","src","bookCover","alt","BookDetails","Img_Img","onDetails","ISBNs","BookCard","current","cover","large","title","href","authors","url","name","publish_date","ebooks","preview_url","borrow_url","App","faves","book1","booksCover","allBooks","active","bookISBN","books","Object","objectSpread","push","ISBN","prevState","_this3","bookCovers","BookDetails_BookDetails","medium","key","BookCard_BookCard","ListBooks_ListBooks","id","xmlns","viewBox","width","height","fill","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3788deaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img14.d3ff07a0.png\";","import React, { Component } from 'react'\n\nexport default class Search extends Component {\n\n  \n  render() {\n    return (\n      <div>\n      <form onSubmit={this.props.searchBook} style={{\"display\": \"inline-block\"}} className=\"col-4\">\n          <input type=\"text\" placeholder=\"search book by title\" onChange={this.props.handleSearch}/>\n          <button className=\"btnSearch\"type=\"submit\">Search</button> \n      </form> \n      {/* <form onSubmit={this.props.searchBook} style={{\"display\": \"inline-block\"}} className=\"col-4\">\n          <input type=\"text\" placeholder=\"search book by author\" onChange={this.props.handleSearch}/>\n          <button className=\"btnSearch\"type=\"submit\">Search</button> \n      </form>\n      <form onSubmit={this.props.searchBook} style={{\"display\": \"inline-block\"}} className=\"col-4\">\n          <input type=\"text\" placeholder=\"search book by publisher\" onChange={this.props.handleSearch}/>\n          <button className=\"btnSearch\"type=\"submit\">Search</button> \n      </form>   */}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Search from './Search'\nvar convert = require('xml-js')\n\n\n////key: Jui4sG4vPxdG0tWeaG9Bsw\n//secret: 0B8zeMDyF4KMhdS3R6QMSEe0LsuxoVbd6UhisfFUU\n\n//APIgoogleBook AIzaSyD0pHEXFGy_F07De62dzb2w89Zz0Ime4zs\nexport default class ListBooks extends Component {\n\n  state = {    \n    searchInput: '',\n    searchedBook: []\n  }\n  handleSearch=(e) => {\n    e.preventDefault()\n    this.setState({searchInput:e.target.value})\n  }\nsearchBook =(e)=>\n{\n  e.preventDefault()\n  \n    fetch(`http://www.googleapis.com/books/v1/volumes?q=${this.state.searchInput}`).then(response => {\n      response.json().then(data => {\n        console.log(data);\n        \n        // let copyStateSearch = { ...this.state }\n        // for(let i=0 ; i<data.response.items.length;i++){\n        //   copyStateSearch.searchedBook.push({ISBN:data.docs[1].isbn , title:data.docs[1].title })\n\n        // }\n        //console.log(data);\n        this.setState({searchedBook:this.state.searchedBook})\n       //console.log(this.state.searchedBook);\n        //console.log(data.docs[1].title);\n       //console.log(data.docs[\"\"0\"\"].author_name);\n\n      })\n    })\n  } \nrender() {\n  let bookSearching = this.state.searchedBook.map((book,index) => {\n     return <Search handleSearch={this.handleSearch} searchBook={this.searchBook}/>\n  })\n  return (\n    <div>\n      <Search handleSearch={this.handleSearch} searchBook={this.searchBook}/>\n\n      {bookSearching}\n{/* <Img bookCover={this.state.book1}/> */}\n    </div>\n  )\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n// https://www.goodreads.com/search.xml?key=Jui4sG4vPxdG0tWeaG9Bsw&q=frost\n// //fetch(`http://openlibrary.org/search.json?q=${this.state.searchInput}`).then(response => {\n// fetch(`https://cors-anywhere.herokuapp.com/www.goodreads.com/search.xml?q=${this.state.searchInput}&key=Jui4sG4vPxdG0tWeaG9Bsw`)\n//   .then(response => {\n//     let xmlText = response.text()\n//     console.log(xmlText)\n//     return xmlText  \n//   })\n//     .then(xmlText => {\n//       let result = convert.xml2json(xmlText)\n//       console.log(result);\n//       return result \n//       })\n//       .then(result => {\n//         console.log(JSON.parse(result))\n//       })","import React, { Component } from 'react'\n\nexport default class Img extends Component {\n    handleDetails=()=>{\n        this.props.handleDetailsClick()\n    }\n  render() {\n    return (\n      <div>\n<img onClick={this.handleDetails} src={this.props.bookCover} alt=\"cover\" />        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Img from './Img'\n\nexport default class BookDetails extends Component {\n    \n  render(){\n    return (\n      <div style={{\"display\": \"inline-block\"}} className=\"col-3\">\n <Img bookCover={this.props.book} handleDetailsClick={this.props.onDetails}/>\n      </div>\n    )\n  }\n}\n","const ISBNs =[\n    \"9780721451039\",\"9781595669841\",\"9780448439143\",\n    \"9780618732784\",\"9781842709436\",\"9781419401091\",\"9781603576710\",\"9780545757195\",\"9781770938335\",\"9780307304278\",\"9781405234986\",\"9780340698303\"\n]\nexport default ISBNs;\n","import React, { Component } from 'react'\n\nexport default class BookCard extends Component {\n  render() {\n    return (\n      <div>\n        <img src={this.props.current.cover.large} alt=\"\"/>\n       <h3>{this.props.current.title}</h3>\n        <br/>\n        <h5>Author:</h5>\n        <a href={this.props.current.authors[\"0\"].url} > {this.props.current.authors[\"0\"].name}</a>\n        <br/><br/>\n        <h5>publish date:</h5>\n        <h6>{this.props.current.publish_date}</h6>\n        <br/>\n        <a href={this.props.current.ebooks[\"0\"].preview_url} className=\"button\">Preview</a>\n        {/* <button onClick={this.props.current.ebooks[\"0\"].preview_url}>Preview</button> */}\n        \n        <a href={this.props.current.ebooks[\"0\"].borrow_url} className=\"button\">Borrow</a>\n\n      </div>\n    )\n  }\n}\n  // console.log(data[`ISBN:${bookISBN}`].title);\n         //console.log(data[`ISBN:${bookISBN}`].authors[\"0\"].name);\n         //console.log(data[`ISBN:${bookISBN}`].authors[\"0\"].url);\n         //console.log(data[`ISBN:${bookISBN}`].ebooks[\"0\"].preview_url);\n         //console.log(data[`ISBN:${bookISBN}`].ebooks[\"0\"].borrow_url);\n        //console.log(data[`ISBN:${bookISBN}`].publish_date);","import React, { Component } from 'react'\n\nexport default class Row extends Component {\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport ListBooks from './ListBooks'\nimport BookDetails from './BookDetails';\nimport ISBNs from './ISBNs'\nimport Row from './Row';\nimport BookCard from './BookCard';\nimport Search from './Search';\n\nclass App extends Component {\n  state = {\n    faves: [],\n    book1: '',\n    booksCover: [],\n    allBooks: [],\n    current:{},\n    active : false\n  }\n  componentDidMount() {\n    var url = '';\n    let AllISBNsBooks = ISBNs.map((bookISBN, index) => {\n      url = 'https://openlibrary.org/api/books?bibkeys=ISBN:' + bookISBN + '&jscmd=data&format=json'\n      fetch(url).then(response => {\n        response.json().then(data => {\n          let books = { ...this.state }\n         // console.log(data[`ISBN:${bookISBN}`].title);\n         //console.log(data[`ISBN:${bookISBN}`].authors[\"0\"].name);\n         //console.log(data[`ISBN:${bookISBN}`].authors[\"0\"].url);\n         //console.log(data[`ISBN:${bookISBN}`].ebooks[\"0\"].preview_url);\n         //console.log(data[`ISBN:${bookISBN}`].ebooks[\"0\"].borrow_url);\n        //console.log(data[`ISBN:${bookISBN}`].publish_date);\n      books.allBooks.push({ISBN: bookISBN, data: data[`ISBN:${bookISBN}`]})\n\n          // books.booksCover.push(data[`ISBN:${bookISBN}`].cover.medium)\n          return this.setState((prevState) => ({ allBooks: books.allBooks }))\n        })\n      })\n    })\n  }//.cover.medium\n\n  handleDetailsClick = (book) => {\n\n   const url = 'https://openlibrary.org/api/books?bibkeys=ISBN:' + book + '&jscmd=data&format=json'\n    fetch(url).then(response => {\n      response.json().then(data => {\n        this.setState({current: data[`ISBN:${book}`]})\n        this.setState({active: true})\n        //console.log(\"im data\",data);\n        \n        //console.log(\"im isbn\",data[`ISBN:${book}`]) // take a look at what you get back!\n      })\n    })\n    //console.log(\"Fetching details for\" + book);\n  }\n\n\n  render() {\n    let bookCovers = this.state.allBooks.map((book,index) => {\n      return <BookDetails book={book.data.cover.medium} key={index} onDetails={()=>{this.handleDetailsClick(book.ISBN)}} />\n      \n\n    })\n\nlet display;\n\nif (this.state.active){\n  display =  <BookCard current={this.state.current}/>\n  \n} else {\n  display = bookCovers\n          \n}\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <h2>Books are a uniquely portable magic.</h2>\n          <div><img src={require('./img14.png')} alt=\"\"/></div>\n        </header>\n        <div>\n<ListBooks />\n</div>\n        <div className=\"book-library\">\n          {/* <ListBooks book={this.state.book1} faves={this.state.faves} /> */}\n          {display}\n        </div>\n\n        <footer>\n          <div className=\"col-1\" style={{\"display\": \"inline-block\"}}>\n          <svg id=\"i-home\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" fill=\"none\" stroke=\"currentcolor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\">\n    <path d=\"M12 20 L12 30 4 30 4 12 16 2 28 12 28 30 20 30 20 20 Z\" />\n</svg></div>\n       \n        \n        \n<div className=\"col-1\" style={{\"display\": \"inline-block\"}}>\n<svg id=\"i-twitter\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\" width=\"32\" height=\"32\">\n    <path stroke-width=\"0\" fill=\"currentColor\" d=\"M60 16 L54 17 L58 12 L51 14 C42 4 28 15 32 24 C16 24 8 12 8 12 C8 12 2 21 12 28 L6 26 C6 32 10 36 17 38 L10 38 C14 46 21 46 21 46 C21 46 15 51 4 51 C37 67 57 37 54 21 Z\" />\n</svg></div>\n\n   \n\n\n<div className=\"col-1\" style={{\"display\": \"inline-block\"}}> <svg id=\"i-github\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\" width=\"32\" height=\"32\">\n    <path stroke-width=\"0\" fill=\"currentColor\" d=\"M32 0 C14 0 0 14 0 32 0 53 19 62 22 62 24 62 24 61 24 60 L24 55 C17 57 14 53 13 50 13 50 13 49 11 47 10 46 6 44 10 44 13 44 15 48 15 48 18 52 22 51 24 50 24 48 26 46 26 46 18 45 12 42 12 31 12 27 13 24 15 22 15 22 13 18 15 13 15 13 20 13 24 17 27 15 37 15 40 17 44 13 49 13 49 13 51 20 49 22 49 22 51 24 52 27 52 31 52 42 45 45 38 46 39 47 40 49 40 52 L40 60 C40 61 40 62 42 62 45 62 64 53 64 32 64 14 50 0 32 0 Z\" />\n</svg></div>\n\n\n\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n//key: Jui4sG4vPxdG0tWeaG9Bsw\n//secret: 0B8zeMDyF4KMhdS3R6QMSEe0LsuxoVbd6UhisfFUU\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}